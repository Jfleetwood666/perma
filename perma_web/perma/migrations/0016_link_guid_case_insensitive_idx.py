# Generated by Django 3.2.18 on 2023-04-03 22:02

import django.contrib.postgres.indexes
from django.db import migrations
import django.db.models.functions.text

from django.db.utils import ProgrammingError
from psycopg2.errors import InsufficientPrivilege


def create_extensions(apps, schema_editor):
    """
    In environments where the database user does not have the power to
    create extensions, these extensions _must_ have been created by another
    user prior to running this migration.
    """
    try:
        for extension in ['btree_gin', 'pg_trgm']:
            schema_editor.execute(f"CREATE EXTENSION IF NOT EXISTS { extension }")
    except (InsufficientPrivilege, ProgrammingError):
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('perma', '0015_alter_internetarchiveitem_tasks_in_progress'),
    ]

    operations = [
        migrations.RunPython(create_extensions, migrations.RunPython.noop),
        migrations.AddIndex(
            model_name='link',
            index=django.contrib.postgres.indexes.GinIndex(django.contrib.postgres.indexes.OpClass(django.db.models.functions.text.Upper('guid'), name='gin_trgm_ops'), name='guid_case_insensitive_idx'),
        ),
    ]
