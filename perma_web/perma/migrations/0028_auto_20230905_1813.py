# Generated by Django 3.2.20 on 2023-09-05 18:13

from django.db import migrations, models


def fixup_private_reason(apps, schema_editor):
    """
    Instead of 'policy' and 'old_policy', use descriptive keys
    """
    Link = apps.get_model('perma', 'Link')
    print("Migrating 'old_policy' to 'meta'.")
    Link.objects.filter(
        private_reason='old_policy'
    ).update(
        private_reason='meta'
    )
    print("Migrating 'policy' to 'meta_perma'.")
    Link.objects.filter(
        private_reason='policy'
    ).update(
        private_reason='meta_perma'
    )

def reverse_fixup_private_reason(apps, schema_editor):
    Link = apps.get_model('perma', 'Link')
    print("Migrating 'meta' to 'old_policy'.")
    Link.objects.filter(
        private_reason='meta'
    ).update(
        private_reason='old_policy'
    )
    print("Migrating 'meta_perma' to 'policy'.")
    Link.objects.filter(
        private_reason='meta_perma'
    ).update(
        private_reason='policy'
    )


class Migration(migrations.Migration):

    dependencies = [
        ('perma', '0027_alter_capture_role'),
    ]

    operations = [
        migrations.AlterField(
            model_name='historicallink',
            name='private_reason',
            field=models.CharField(blank=True, choices=[('domain', 'At the request of the domain owner'), ('meta_perma', 'Perma-specific robots.txt or meta tag'), ('meta', 'Generic robots.txt or meta tag'), ('user', 'At user direction'), ('takedown', 'At request of content owner'), ('failure', 'Analysis of meta tags failed'), ('flagged', 'Contains flagged content')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='link',
            name='private_reason',
            field=models.CharField(blank=True, choices=[('domain', 'At the request of the domain owner'), ('meta_perma', 'Perma-specific robots.txt or meta tag'), ('meta', 'Generic robots.txt or meta tag'), ('user', 'At user direction'), ('takedown', 'At request of content owner'), ('failure', 'Analysis of meta tags failed'), ('flagged', 'Contains flagged content')], max_length=10, null=True),
        ),
        migrations.RunPython(fixup_private_reason, reverse_fixup_private_reason, elidable=True),
    ]
